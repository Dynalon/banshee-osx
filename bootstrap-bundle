#!/usr/bin/env bash

set -e

profile_name="$1"

if test -z "$profile_name"; then
	case "$(uname)" in
		Linux) profile_name=linux ;;
		Darwin) profile_name=darwin ;;
		*)
			echo "Unsupported system type: $(uname)"
			exit 1
			;;
	esac
fi

profile="$profile_name.py"

if ! test -f "../bockbuild/profiles/banshee/$profile"; then
	echo "Profile does not exist: build/bundle/$profile"
	exit 1
fi

selfdir="$(pwd)/$(dirname "$0")"
envfile="$selfdir/$profile_name.env"

pushd ../bockbuild/profiles/banshee &>/dev/null
./$profile -bv
./$profile -e > "$envfile"

# write the newly generated env vars as xml into the Nereid.csproj
# so we can start with MonoDevelop immediately.
[ $profile_name = darwin ] && \
	./$profile --csproj-insert="$selfdir/src/Clients/Nereid/Nereid.csproj"
popd &>/dev/null

[ $profile_name = darwin ] && \
	echo "export GTK2_RC_FILES=\"$selfdir/../bockbuild/profiles/banshee/skeleton.darwin/Contents/Resources/etc/gtk-2.0/gtkrc\"" >> "$envfile"

source "$envfile"

NOCONFIGURE=1 ./autogen.sh
./profile-configure $profile_name --prefix="$BUILD_PREFIX"

cat <<EOF

The world has built! You can now build Banshee.
Be sure to source in the profile environment:

  $ source $profile_name.env

Once sourced, just run autogen/configure/make, etc
as normal. The install prefix is available as the
BUILD_PREFIX environment variable - e.g.:

  $ ./autogen.sh --prefix="\$BUILD_PREFIX"

Have fun!

EOF
